{"version":3,"sources":["components/DateFormat/DateFormat.js","store/context.js","components/BasicInfoCards/BasicInfoCards.styles.js","components/BasicInfoCards/BasicInfoCards.js","service/dateWithinRangeChecker.js","components/DetailCard/DetailCard.styles.js","components/DetailCard/DetailCard.js","components/PageControl/PageControl.styles.js","components/PageControl/PageControl.js","components/QueryPanel/QueryPanel.styles.js","components/QueryPanel/QueryPanel.js","App.styles.js","store/useGlobalState.js","service/getData.js","styleStore/theme.js","styleStore/globalStyles.js","store/GlobalStateProvider.js","service/getEpiNumReqStr.js","App.js","serviceWorker.js","index.js"],"names":["React","memo","timeStamp","console","log","formattedDate","Date","date","getDate","month","0","1","2","3","4","5","6","7","8","9","10","11","getMonth","year","getFullYear","Context","createContext","InfoCardsWrapper","styled","div","theme","breakpoints","sm","BasicInfoCard","button","deepGreen","lightGreen","CharImg","img","useContext","state","dispatch","episodeReq","episodeData","cardDisplay","showSecondPart","characterData","slice","map","el","i","targetDate","rangeStartDate","rangeEndDate","name","status","species","image","created","id","charPosition","startDateQuery","endDateQuery","setHours","onClick","type","payload","key","src","alt","DateFormat","ClosePopUpBtn","pastelOrange","darkOrange","DetailCard","BasicInfoWrapper","activeCharPosition","activeCharInfo","episodeInfo","episode","gender","origin","PageBtn","isActive","milkTea","numberOfBtns","Math","ceil","dataInfo","count","activeSitePage","currentApiPage","btnDisplay","push","QueryPanel","SpeciesQueryForm","form","SpeciesQueryInput","input","ClearQueryBtn","useState","speciesInput","setSpeciesInput","handleChange","e","target","value","onSubmit","preventDefault","newSpeciesQuery","trim","speciesQuery","handleSubmit","htmlFor","placeholder","onChange","selected","statusQuery","AppWrapper","initialState","error","reducer","action","results","info","targetSitePage","targetApiPage","useGlobalState","useReducer","url","a","axios","get","response","data","blue","paleBlue","fontSizes","md","lg","createGlobalStyle","GlobalStateProvider","children","fetchData","query","collection","getData","dataInArr","length","useEffect","activeCharEpiInfo","episodeNum","join","Provider","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d9a532e7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FormattedDate = ({ timeStamp }) => {\n  console.log(\"date\");\n  let monthEng = {\n    0: \"Jan\",\n    1: \"Feb\",\n    2: \"Mar\",\n    3: \"Apr\",\n    4: \"May\",\n    5: \"Jun\",\n    6: \"Jul\",\n    7: \"Aug\",\n    8: \"Sep\",\n    9: \"Oct\",\n    10: \"Nov\",\n    11: \"Dec\",\n  };\n\n  let formattedDate = new Date(timeStamp);\n  let date = formattedDate.getDate();\n  let monthNum = formattedDate.getMonth();\n  let month = monthEng[monthNum];\n  let year = formattedDate.getFullYear();\n\n  return (\n    <span>\n      {date} {month} {year}\n    </span>\n  );\n};\n\nexport default React.memo(FormattedDate);\n","import { createContext } from \"react\";\n\nconst Context = createContext({});\n\nexport default Context;\n","import styled from \"styled-components\";\n\nexport const InfoCardsWrapper = styled.div`\n  width: 80vw;\n  min-height: 40vw;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-bottom: 1%;\n\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nexport const BasicInfoCard = styled.button`\n  color: ${({ theme }) => theme.deepGreen};\n  background: ${({ theme }) => theme.lightGreen};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  &:hover {\n    background: ${({ theme }) => theme.deepGreen};\n    color: ${({ theme }) => theme.lightGreen};\n  }\n`;\n\nexport const CharImg = styled.img`\n  width: 100%;\n`;\n","import React, { useContext, Fragment } from \"react\";\nimport DateFormat from \"../DateFormat/DateFormat\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./BasicInfoCards.styles\";\nimport { dateWithinRangeChecker } from \"../../service/dateWithinRangeChecker\";\n\nconst BasicInfoCards = () => {\n  console.log(\"info card\");\n  const { state, dispatch } = useContext(Context);\n  console.log(\"epiReq\", state.episodeReq, \"epiData\", state.episodeData);\n\n  const numOfCardOnEachPage = 10;\n\n  let modifiedData;\n  if (state.showSecondPart) {\n    modifiedData = state.characterData.slice(numOfCardOnEachPage);\n  } else {\n    modifiedData = state.characterData.slice(0, numOfCardOnEachPage);\n  }\n\n  const cardDisplay = modifiedData.map((el, i) => {\n    const { name, status, species, image, created, id } = el;\n    let charPosition = i;\n    if (state.showSecondPart) {\n      charPosition = i + numOfCardOnEachPage;\n    }\n\n    let isCreatedDateWithinQueryPeriod = dateWithinRangeChecker(\n      created,\n      state.startDateQuery,\n      state.endDateQuery\n    );\n\n    if (!isCreatedDateWithinQueryPeriod) {\n      return <Fragment key={i}></Fragment>;\n    }\n\n    return (\n      <Styled.BasicInfoCard\n        onClick={() => {\n          dispatch({\n            type: `SET_ACTIVE_CHAR_POSITION`,\n            payload: charPosition,\n          });\n        }}\n        key={i}\n      >\n        <Styled.CharImg src={image} alt={name} />\n        <p>\n          {name} id: {id}\n        </p>\n        <p>\n          created on <DateFormat timeStamp={created} />\n        </p>\n        <p>Species: {species}</p>\n        <p>Status: {status}</p>\n      </Styled.BasicInfoCard>\n    );\n  });\n\n  return <Styled.InfoCardsWrapper>{cardDisplay}</Styled.InfoCardsWrapper>;\n};\n\nexport default React.memo(BasicInfoCards);\n","const dateWithinRangeChecker = (targetDate, rangeStartDate, rangeEndDate) => {\n  targetDate = new Date(targetDate);\n\n  if (rangeStartDate) {\n    rangeStartDate = new Date(rangeStartDate);\n    rangeStartDate.setHours(0, 0, 0);\n    if (targetDate < rangeStartDate) {\n      return false;\n    }\n  }\n\n  if (rangeEndDate) {\n    rangeEndDate = new Date(rangeEndDate);\n    rangeEndDate.setHours(23, 59, 0);\n    if (targetDate > rangeEndDate) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport { dateWithinRangeChecker };\n","import styled from \"styled-components\";\n\nexport const ClosePopUpBtn = styled.button`\n  color: white;\n  background-color: ${({ theme }) => theme.pastelOrange};\n  border-radius: 50%;\n  &:hover {\n    color: white;\n    background-color: ${({ theme }) => theme.darkOrange};\n  }\n  font-size: 1.5rem;\n  width: 3rem;\n  height: 3rem;\n  position: absolute;\n  left: 80%;\n  top: 15%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const DetailCard = styled.div`\n  width: 60%;\n  height: 70%;\n  background: white;\n  text-align: left;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  overflow: auto;\n`;\n\nexport const BasicInfoWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const CharImg = styled.img`\n  width: 50%;\n`;\n","import React, { Fragment, useContext } from \"react\";\nimport DateFormat from \"../DateFormat/DateFormat\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./DetailCard.styles\";\n\nconst DetailCard = () => {\n  console.log(\"detail card\");\n  const { state, dispatch } = useContext(Context);\n\n  const isPopUpOn = state.activeCharPosition || state.activeCharPosition === 0;\n\n  if (!isPopUpOn) {\n    return <></>;\n  }\n\n  const activeCharInfo = state.characterData[state.activeCharPosition];\n\n  const episodeInfo = state.episodeData.map((el, i) => {\n    return (\n      <Fragment key={i}>\n        <p>\n          {el.episode} {el.name}\n        </p>\n      </Fragment>\n    );\n  });\n\n  const {\n    name,\n    status,\n    species,\n    image,\n    created,\n    id,\n    gender,\n    origin,\n  } = activeCharInfo;\n\n  return (\n    <>\n      <Styled.DetailCard>\n        <Styled.BasicInfoWrapper>\n          <Styled.CharImg src={image} alt={name} />\n          <div>\n            <p>\n              {name} id: {id}\n            </p>\n            <p>\n              created on <DateFormat timeStamp={created} />\n            </p>\n            <p>Species: {species}</p>\n            <p>Status: {status}</p>\n            <p>Gender: {gender}</p>\n            <p>Origin: {origin.name}</p>\n          </div>\n        </Styled.BasicInfoWrapper>\n\n        <p>Appeared Episode:</p>\n        {episodeInfo}\n      </Styled.DetailCard>\n      <Styled.ClosePopUpBtn\n        onClick={() => {\n          dispatch({\n            type: `SET_ACTIVE_CHAR_POSITION`,\n            payload: null,\n          });\n        }}\n      >\n        &#10005;\n      </Styled.ClosePopUpBtn>\n    </>\n  );\n};\n\nexport default DetailCard;\n","import styled from \"styled-components\";\n\nexport const PageBtn = styled.button`\n  color: ${({ isActive, theme }) => (isActive ? \"red\" : theme.milkTea)};\n  font-size: 1rem;\n  padding: 5px;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./PageControl.styles\";\n\nconst PageControl = () => {\n  console.log(\"page control\");\n  const { state, dispatch } = useContext(Context);\n\n  const numberOfBtns = Math.ceil(state.dataInfo.count / 10);\n\n  let activeSitePage = state.currentApiPage * 2;\n\n  if (!state.showSecondPart) {\n    activeSitePage = state.currentApiPage * 2 - 1;\n  }\n\n  let btnDisplay = [];\n\n  for (let i = 1; i <= numberOfBtns; i++) {\n    let isActive = false;\n    if (activeSitePage === i) {\n      isActive = true;\n    }\n    btnDisplay.push(\n      <Styled.PageBtn\n        isActive={isActive}\n        key={i}\n        onClick={() => {\n          dispatch({ type: `HANDLE_CHANGE_SITE_PAGE_NUM`, payload: i });\n        }}\n      >\n        {i}\n      </Styled.PageBtn>\n    );\n  }\n\n  return <div>{btnDisplay}</div>;\n};\n\nexport default React.memo(PageControl);\n","import styled from \"styled-components\";\n\nexport const QueryPanel = styled.div`\n  margin: 1% auto;\n  & > label {\n    margin-left: 7px;\n  }\n`;\n\nexport const SpeciesQueryForm = styled.form`\n  display: inline;\n`;\n\nexport const SpeciesQueryInput = styled.input`\n  font-size: 14px;\n  padding: 2px;\n`;\n\nexport const ClearQueryBtn = styled.button`\n  background: white;\n  color: ${({ theme }) => theme.pastelOrange};\n  border: ${({ theme }) => theme.pastelOrange} 1px solid;\n  border-radius: 20px;\n  &:hover {\n    color: white;\n    background-color: ${({ theme }) => theme.pastelOrange};\n  }\n  padding: 5px 10px;\n  margin-left: 7px;\n`;\n","import React, { useContext, useState } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./QueryPanel.styles\";\n\nconst QueryPanel = () => {\n  console.log(\"Query Input\");\n  const { state, dispatch } = useContext(Context);\n  const [speciesInput, setSpeciesInput] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newSpeciesQuery = e.target.speciesInput.value.trim();\n\n    if (newSpeciesQuery === state.speciesQuery) {\n      return;\n    }\n\n    dispatch({\n      type: `SET_SPECIES_QUERY`,\n      payload: newSpeciesQuery,\n    });\n  };\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"speciesInput\":\n        setSpeciesInput(e.target.value);\n        break;\n\n      case \"statusInput\":\n        dispatch({\n          type: `SET_STATUS_QUERY`,\n          payload: e.target.value,\n        });\n        break;\n\n      case \"startDateInput\":\n        dispatch({\n          type: `SET_START_DATE_QUERY`,\n          payload: e.target.value,\n        });\n        break;\n\n      case \"endDateInput\":\n        dispatch({\n          type: `SET_END_DATE_QUERY`,\n          payload: e.target.value,\n        });\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const clearAllQuery = () => {\n    dispatch({\n      type: `CLEAR_ALL_FILTER`,\n    });\n    setSpeciesInput(\"\");\n  };\n\n  return (\n    <Styled.QueryPanel>\n      <Styled.SpeciesQueryForm\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <label htmlFor=\"speciesInput\">Species: </label>\n        <Styled.SpeciesQueryInput\n          type=\"text\"\n          id=\"speciesInput\"\n          name=\"speciesInput\"\n          placeholder=\"Press enter to submit\"\n          value={speciesInput}\n          onChange={(e) => handleChange(e)}\n        />\n      </Styled.SpeciesQueryForm>\n      <label htmlFor=\"statusInput\">Status: </label>\n      <select\n        id=\"statusInput\"\n        name=\"statusInput\"\n        onChange={(e) => handleChange(e)}\n      >\n        <option selected={state.statusQuery}>\n          {state.statusQuery && `${state.statusQuery}`}\n        </option>\n        <option value=\"\">All</option>\n        <option value=\"alive\">Alive</option>\n        <option value=\"dead\">Dead</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n      <label htmlFor=\"startDateInput\">\n        Filter characters by created date:{\" \"}\n      </label>\n      from{\" \"}\n      <input\n        type=\"date\"\n        name=\"startDateInput\"\n        id=\"startDateInput\"\n        value={state.startDateQuery}\n        onChange={(e) => handleChange(e)}\n      />{\" \"}\n      to\n      <input\n        type=\"date\"\n        name=\"endDateInput\"\n        id=\"endDateInput\"\n        value={state.endDateQuery}\n        onChange={(e) => handleChange(e)}\n      />\n      <Styled.ClearQueryBtn onClick={clearAllQuery}>CLEAR</Styled.ClearQueryBtn>\n    </Styled.QueryPanel>\n  );\n};\n\nexport default QueryPanel;\n","import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n","import { useReducer } from \"react\";\n\nconst initialState = {\n  characterData: [],\n  dataInfo: {},\n  episodeData: [],\n  error: \"\",\n  currentApiPage: 1,\n  showSecondPart: false,\n  activeCharPosition: null,\n  speciesQuery: \"\",\n  statusQuery: \"\",\n  startDateQuery: \"\",\n  endDateQuery: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"RECIEVE_CHAR_DATA\":\n      return {\n        ...state,\n        characterData: action.payload.results,\n        dataInfo: action.payload.info,\n        error: \"\",\n      };\n\n    case `HANDLE_ERROR`:\n      return {\n        ...state,\n        error: action.payload,\n        characterData: [],\n        episodeData: [],\n        dataInfo: {},\n      };\n\n    case `HANDLE_CHANGE_SITE_PAGE_NUM`:\n      const targetSitePage = action.payload;\n      const targetApiPage = Math.ceil(targetSitePage / 2);\n\n      if (targetApiPage !== state.currentApiPage) {\n        if (action.payload % 2 === 0) {\n          return {\n            ...state,\n            currentApiPage: targetApiPage,\n            showSecondPart: true,\n            // episodeData: [],\n            activeCharPosition: null,\n          };\n        } else {\n          return {\n            ...state,\n            currentApiPage: targetApiPage,\n            showSecondPart: false,\n            // episodeData: [],\n            activeCharPosition: null,\n          };\n        }\n      }\n      if (targetSitePage % 2 === 0) {\n        return {\n          ...state,\n          showSecondPart: true,\n          // episodeData: [],\n          activeCharPosition: null,\n        };\n      } else {\n        return { ...state, showSecondPart: false };\n      }\n\n    case `SET_ACTIVE_CHAR_POSITION`:\n      return {\n        ...state,\n        activeCharPosition: action.payload,\n      };\n\n    case `RECIEVE_EPISODE_DATA`:\n      return {\n        ...state,\n        episodeData: action.payload,\n      };\n\n    case `SET_SPECIES_QUERY`:\n      console.log(\"SECIESQUERY\", action.payload);\n      return {\n        ...state,\n        speciesQuery: action.payload,\n        currentApiPage: 1,\n        showSecondPart: false,\n        activeCharPosition: null,\n      };\n\n    case `SET_STATUS_QUERY`:\n      console.log(\"status query\", action.payload);\n      return {\n        ...state,\n        statusQuery: action.payload,\n        currentApiPage: 1,\n        showSecondPart: false,\n        activeCharPosition: null,\n      };\n\n    case `SET_START_DATE_QUERY`:\n      return {\n        ...state,\n        startDateQuery: action.payload,\n      };\n    case `SET_END_DATE_QUERY`:\n      return {\n        ...state,\n        endDateQuery: action.payload,\n      };\n\n    case `CLEAR_ALL_FILTER`:\n      return {\n        ...state,\n        speciesQuery: \"\",\n        statusQuery: \"\",\n        startDateQuery: \"\",\n        endDateQuery: \"\",\n        activeCharPosition: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalState = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalState;\n","import axios from \"axios\";\n\nexport default async (url) => {\n  const response = await axios.get(url);\n  return response.data;\n};\n","export const theme = {\n  pastelOrange: \"#EE6C4D\",\n  darkOrange: \"#B0361E\",\n  lightGreen: \"#C0CFC3\",\n  deepGreen: \"#4B554F\",\n  blue: \"#a8dadc\",\n  paleBlue: \"#f1faee\",\n  milkTea: \"#8e7054\",\n  // pink: \"#b75d69\",\n\n  fontSizes: {\n    sm: \"10px\",\n    md: \"15px\",\n    lg: \"25px\",\n  },\n\n  breakpoints: {\n    sm: \"(max-width: 540px)\",\n    md: \"(max-width: 720px)\",\n    lg: \"(max-width: 960px)\",\n  },\n};\n","import { createGlobalStyle } from \"styled-components/macro\";\nimport { theme } from \"./theme\";\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding:0;\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n        \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n        sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        box-sizing: border-box; \n    }\n\n    button {\n        border: none;\n        outline:none;\n        background:none;\n        cursor:pointer;\n    }\n\n    input{\n        border-radius: 5px;\n        box-shadow: 0 2px 5px ${theme.blue}, 0 -2px 5px ${theme.paleBlue};\n        border: 1px solid ${theme.blue};\n        margin: 5px;\n    }\n`;\n","import React, { useEffect } from \"react\";\nimport Context from \"./context\";\nimport useGlobalState from \"./useGlobalState\";\nimport getData from \"../service/getData\";\nimport { getEpiNumReqStr } from \"../service/getEpiNumReqStr\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../styleStore/theme\";\nimport GlobalStyles from \"../styleStore/globalStyles\";\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useGlobalState();\n\n  const fetchData = async (query = \"\", collection = \"character\") => {\n    try {\n      const response = await getData(\n        `https://rickandmortyapi.com/api/${collection}/${query}`\n      );\n\n      console.log(response);\n\n      if (response.error) {\n        console.log(\"Err returned from API:\", response.error);\n        return dispatch({ type: `HANDLE_ERROR`, payload: response.error });\n      }\n\n      if (collection === \"character\") {\n        dispatch({\n          type: `RECIEVE_CHAR_DATA`,\n          payload: { results: response.results, info: response.info },\n        });\n      } else {\n        let dataInArr = response;\n        if (!response.length) {\n          dataInArr = [{ ...response }];\n        }\n        dispatch({\n          type: `RECIEVE_EPISODE_DATA`,\n          payload: dataInArr,\n        });\n      }\n    } catch (err) {\n      console.log(\"Err from fetching\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\n      `?page=${state.currentApiPage}&species=${state.speciesQuery}&status=${state.statusQuery}`\n    );\n    fetchData(\n      `?page=${state.currentApiPage}&species=${state.speciesQuery}&status=${state.statusQuery}`\n    );\n  }, [state.currentApiPage, state.speciesQuery, state.statusQuery]);\n\n  useEffect(() => {\n    let charPosition = state.activeCharPosition;\n\n    if (!charPosition && charPosition !== 0) {\n      return;\n    }\n    const activeCharEpiInfo = state.characterData[charPosition].episode;\n    const episodeReq = getEpiNumReqStr(activeCharEpiInfo);\n\n    fetchData(`${episodeReq}`, `episode`);\n  }, [state.activeCharPosition]);\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {children}\n      </ThemeProvider>\n    </Context.Provider>\n  );\n};\n\nexport default GlobalStateProvider;\n","export const getEpiNumReqStr = (episodeUrlArr) => {\n  let episodeNumArr = [];\n  episodeNumArr = episodeUrlArr.map((url, i) => {\n    let episodeNum = 1;\n    for (let i = url.length - 1; i >= 0; i--) {\n      if (url[i] === \"/\") {\n        episodeNum = url.slice(i + 1);\n        break;\n      }\n    }\n    return episodeNum;\n  });\n\n  return episodeNumArr.join();\n};\n","import React from \"react\";\nimport BasicInfoCards from \"./components/BasicInfoCards/BasicInfoCards\";\nimport DetailCard from \"./components/DetailCard/DetailCard\";\nimport PageControl from \"./components/PageControl/PageControl\";\nimport QueryPanel from \"./components/QueryPanel/QueryPanel\";\nimport * as Styled from \"./App.styles\";\nimport GlobalStateProvider from \"./store/GlobalStateProvider\";\n\nfunction App() {\n  console.log(\"APP\");\n\n  return (\n    <GlobalStateProvider>\n      <Styled.AppWrapper>\n        <QueryPanel />\n        <BasicInfoCards />\n        <DetailCard />\n        <PageControl />\n      </Styled.AppWrapper>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}