{"version":3,"sources":["store/context.js","components/BasicInfoCards/BasicInfoCards.styles.js","components/BasicInfoCards/BasicInfoCards.js","components/DetailCard/DetailCard.styles.js","components/DetailCard/DetailCard.js","service/timeStampFormatter.js","components/PageControl/PageControl.styles.js","components/PageControl/PageControl.js","components/QueryPanel/QueryPanel.styles.js","components/QueryPanel/QueryPanel.js","App.styles.js","store/useGlobalState.js","service/getEpiNumReqStr.js","styleStore/theme.js","styleStore/globalStyles.js","store/GlobalStateProvider.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","ErrMsgWrapper","styled","div","InfoCardsWrapper","theme","breakpoints","sm","BasicInfoCard","button","isActive","background","success","main","primary","secondary","TextWrapper","React","memo","useContext","state","dispatch","isDataNotFound","cardDisplay","showSecondPart","characterData","slice","map","el","i","name","status","species","image","id","charPosition","onClick","activeCharPosition","type","payload","key","src","alt","ClosePopUpBtn","accent","darken1","dark","DetailCard","shadowColor","ImgWrapper","TextInfoWrapper","Table","table","TH","th","SubTitle","p","EpNum","span","activeCharInfo","episodeInfo","episodeData","episode","created","gender","origin","location","timeStamp","formattedDate","Date","date","getDate","month","0","1","2","3","4","5","6","7","8","9","10","11","getMonth","year","getFullYear","timeStampFormatter","style","color","colSpan","PageBtn","lighten4","disabled","PageControl","length","totalNumOfSitePages","Math","ceil","dataInfo","count","activeSitePage","currentApiPage","numOfDynamicBtns","window","innerWidth","firstDynamicBtn","lastDynamicBtn","dynamicBtnsMidPt","extendedPagesFromMidPt","floor","showFirstEllipsis","showSecondEllipsis","dynamicBtns","push","firstPageBtn","lastPageBtn","previousBtn","nextBtn","QueryPanelWrapper","QueryForm","form","SubmitBtn","ClearQueryBtn","lighten6","QueryPanel","useState","speciesInput","setSpeciesInput","nameInput","setNameInput","handleChange","e","target","value","onSubmit","preventDefault","newSpeciesQuery","trim","newNameQuery","speciesQuery","nameQuery","handleSubmit","htmlFor","placeholder","onChange","statusQuery","AppWrapper","initialState","reducer","action","results","info","targetSitePage","targetApiPage","useGlobalState","useReducer","getEpiNumReqStr","episodeUrlArr","url","episodeNum","join","lighten1","lighten2","fontSizes","md","lg","createGlobalStyle","GlobalStateProvider","children","fetchData","a","collection","activeCharEpiInfo","episodeReq","axios","get","response","query","page","params","data","dataInArr","console","log","useEffect","Provider","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ca23be81.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst Context = createContext({});\n\nexport default Context;\n","import styled from \"styled-components\";\n\nexport const ErrMsgWrapper = styled.div`\n  width: 70vw;\n  min-height: 40vw;\n`;\n\nexport const InfoCardsWrapper = styled.div`\n  width: 70vw;\n  min-height: 35vw;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n\n  margin-bottom: 10px;\n  grid-gap: 10px;\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 90vw;\n    grid-template-columns: repeat(2, 1fr);\n  }\n`;\n\nexport const BasicInfoCard = styled.button`\n  color: ${({ theme, isActive }) =>\n    isActive ? theme.background : theme.success.main};\n  background: ${({ theme, isActive }) =>\n    isActive ? theme.primary.main : theme.secondary.main};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14),\n    0 1px 10px 0 rgba(0, 0, 0, 0.12) !important;\n  &:hover,\n  &:focus {\n    background: ${({ theme }) => theme.primary.main};\n    color: ${({ theme }) => theme.background};\n  }\n  grid-row: span 1;\n\n  & > img {\n    border-radius: 5px 5px 0px 0px;\n    width: 100%;\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 5px 0;\n  width: 100%;\n  height: 100%;\n  & > h2 {\n    font-size: 18px;\n    @media ${({ theme }) => theme.breakpoints.sm} {\n      font-size: 1rem;\n    }\n  }\n  & > p {\n    font-size: 14px;\n    @media ${({ theme }) => theme.breakpoints.sm} {\n      font-size: 14px;\n    }\n  }\n`;\n","import React, { useContext } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./BasicInfoCards.styles\";\n\nconst BasicInfoCards = () => {\n  const { state, dispatch } = useContext(Context);\n\n  //handle Not-found\n  if (state.isDataNotFound) {\n    return (\n      <Styled.ErrMsgWrapper>\n        <h1>No characters fits this filter request. :(</h1>\n      </Styled.ErrMsgWrapper>\n    );\n  }\n\n  const numOfCardOnEachPage = 10;\n\n  let modifiedData;\n  if (state.showSecondPart) {\n    modifiedData = state.characterData.slice(numOfCardOnEachPage);\n  } else {\n    modifiedData = state.characterData.slice(0, numOfCardOnEachPage);\n  }\n\n  const cardDisplay = modifiedData.map((el, i) => {\n    const { name, status, species, image, id } = el;\n    //for SET_ACTIVE_CHAR_POSITION use\n    let charPosition = i;\n    if (state.showSecondPart) {\n      charPosition = i + numOfCardOnEachPage;\n    }\n\n    return (\n      <Styled.BasicInfoCard\n        onClick={() => {\n          state.activeCharPosition !== charPosition &&\n            dispatch({\n              type: `SET_ACTIVE_CHAR_POSITION`,\n              payload: charPosition,\n            });\n        }}\n        key={i}\n        isActive={\n          i ===\n          (typeof state.activeCharPosition === \"number\" &&\n            state.activeCharPosition % 10)\n        }\n      >\n        <img src={image} alt={name} />\n        <Styled.TextWrapper>\n          <h2>{name}</h2>\n          <p>\n            No: {id} | {species} | {status}\n          </p>\n        </Styled.TextWrapper>\n      </Styled.BasicInfoCard>\n    );\n  });\n\n  return <Styled.InfoCardsWrapper>{cardDisplay}</Styled.InfoCardsWrapper>;\n};\n\nexport default React.memo(BasicInfoCards);\n","import styled from \"styled-components\";\n\nexport const ClosePopUpBtn = styled.button`\n  color: white;\n  background-color: ${({ theme }) => theme.accent.darken1};\n  border-radius: 50%;\n  &:hover {\n    color: white;\n    background-color: ${({ theme }) => theme.accent.dark};\n  }\n  &:focus {\n    background-color: ${({ theme }) => theme.accent.dark};\n  }\n  font-size: 1.5rem;\n  width: 3rem;\n  height: 3rem;\n  position: absolute;\n  left: 80vw;\n  top: 15%;\n  transform: translate(-50%, -50%);\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    left: 90vw;\n    top: 10vh;\n    position: fixed;\n  }\n`;\n\nexport const DetailCard = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 60vw;\n  height: 70%;\n  background: white;\n  text-align: left;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  border-radius: 5px;\n  transform: translate(-50%, -50%);\n  overflow: auto;\n  box-shadow: 20px 20px 30px ${({ theme }) => theme.shadowColor},\n    -10px -10px 20px ${({ theme }) => theme.shadowColor};\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 80vw;\n    height: 80vh;\n    position: fixed;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 40%;\n  & > img {\n    width: 100%;\n  }\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 100%;\n  }\n`;\n\nexport const TextInfoWrapper = styled.div`\n  margin: 10px 20px;\n\n  & > h1 {\n    color: ${({ theme }) => theme.accent.main};\n  }\n\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    margin: 5px;\n  }\n`;\n\nexport const Table = styled.table`\n  margin: 15px auto;\n  width: 100%;\n`;\n\nexport const TH = styled.th`\n  vertical-align: text-top;\n  color: grey;\n  width: 90px;\n`;\n\nexport const SubTitle = styled.p`\n  color: grey;\n  font-weight: 700;\n`;\n\nexport const EpNum = styled.span`\n  display: inline-block;\n  width: 70px;\n  background: ${({ theme }) => theme.primary.main};\n  color: white;\n  border-radius: 5px;\n  font-size: 14px;\n  margin-top: 2px;\n  padding: 2px 4px;\n  text-align: center;\n`;\n","import React, { Fragment, useContext } from \"react\";\nimport { timeStampFormatter } from \"../../service/timeStampFormatter\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./DetailCard.styles\";\n\nconst DetailCard = () => {\n  const { state, dispatch } = useContext(Context);\n\n  const isPopUpOn = state.activeCharPosition || state.activeCharPosition === 0;\n\n  if (!isPopUpOn) {\n    return <></>;\n  }\n\n  const activeCharInfo = state.characterData[state.activeCharPosition];\n\n  const episodeInfo = state.episodeData.map((el, i) => {\n    return (\n      <Fragment key={i}>\n        <tr>\n          <Styled.TH>\n            <Styled.EpNum>{el.episode}</Styled.EpNum>\n          </Styled.TH>\n          <td>{el.name}</td>\n        </tr>\n      </Fragment>\n    );\n  });\n\n  const {\n    name,\n    status,\n    species,\n    image,\n    created,\n    id,\n    gender,\n    origin,\n    location,\n  } = activeCharInfo;\n\n  return (\n    <>\n      <Styled.DetailCard>\n        <Styled.ImgWrapper>\n          <img src={image} alt={name} />\n        </Styled.ImgWrapper>\n\n        <Styled.TextInfoWrapper>\n          <h1>{name}</h1>\n          <Styled.SubTitle>\n            Id: {id} &#8226; created on {timeStampFormatter(created)}\n          </Styled.SubTitle>\n\n          <Styled.Table>\n            <tbody>\n              <tr>\n                <Styled.TH>Species</Styled.TH>\n                <td>{species}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Status</Styled.TH>\n                <td>{status}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Gender</Styled.TH>\n                <td>{gender}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Origin</Styled.TH>\n                <td>{origin.name}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Location</Styled.TH>\n                <td>{location.name}</td>\n              </tr>\n            </tbody>\n          </Styled.Table>\n          <Styled.Table>\n            <thead>\n              <tr>\n                <th style={{ color: \"grey\" }} colSpan=\"3\">\n                  Appeared Episode\n                </th>\n              </tr>\n            </thead>\n            <tbody>{episodeInfo}</tbody>\n          </Styled.Table>\n        </Styled.TextInfoWrapper>\n      </Styled.DetailCard>\n\n      <Styled.ClosePopUpBtn\n        onClick={() => {\n          dispatch({\n            type: `SET_ACTIVE_CHAR_POSITION`,\n            payload: null,\n          });\n        }}\n      >\n        &#10005;\n      </Styled.ClosePopUpBtn>\n    </>\n  );\n};\n\nexport default DetailCard;\n","export const timeStampFormatter = (timeStamp) => {\n  let monthDict = {\n    0: \"Jan\",\n    1: \"Feb\",\n    2: \"Mar\",\n    3: \"Apr\",\n    4: \"May\",\n    5: \"Jun\",\n    6: \"Jul\",\n    7: \"Aug\",\n    8: \"Sep\",\n    9: \"Oct\",\n    10: \"Nov\",\n    11: \"Dec\",\n  };\n\n  let formattedDate = new Date(timeStamp);\n  let date = formattedDate.getDate();\n  let monthNum = formattedDate.getMonth();\n  let month = monthDict[monthNum];\n  let year = formattedDate.getFullYear();\n\n  return `${date} ${month} ${year}`;\n};\n","import styled from \"styled-components\";\n\nexport const PageBtn = styled.button`\n  color: ${({ isActive, theme }) =>\n    isActive ? theme.accent.main : theme.success.lighten4};\n  font-size: 1rem;\n  padding: 8px;\n  font-weight: ${({ isActive }) => (isActive ? 700 : 400)};\n  visibility: ${({ disabled }) => disabled && \"hidden\"};\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    font-size: 1.2rem;\n    padding: 10px;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./PageControl.styles\";\n\nconst PageControl = () => {\n  const { state, dispatch } = useContext(Context);\n\n  if (!state.characterData.length) {\n    return <></>;\n  }\n\n  const totalNumOfSitePages = Math.ceil(state.dataInfo.count / 10);\n\n  let activeSitePage = state.currentApiPage * 2;\n\n  if (!state.showSecondPart) {\n    activeSitePage = state.currentApiPage * 2 - 1;\n  }\n\n  let numOfDynamicBtns = 9;\n  const isMobile = window.innerWidth < 540;\n  if (isMobile) {\n    numOfDynamicBtns = 3;\n  }\n\n  const dynamicBtnsMidPt = Math.ceil(numOfDynamicBtns / 2); // 5\n  const extendedPagesFromMidPt = Math.floor(numOfDynamicBtns / 2); // 4\n\n  let showFirstEllipsis = false;\n  let showSecondEllipsis = false;\n  let firstDynamicBtn;\n  let lastDynamicBtn;\n\n  if (totalNumOfSitePages <= numOfDynamicBtns + 2) {\n    // numOfDynamicBtns + 2  ==> as we need to add first & last page btn\n    firstDynamicBtn = 2;\n    lastDynamicBtn = totalNumOfSitePages - 1;\n  } else if (activeSitePage <= 1 + dynamicBtnsMidPt) {\n    firstDynamicBtn = 2;\n    lastDynamicBtn = 1 + numOfDynamicBtns;\n    showSecondEllipsis = true;\n  } else if (activeSitePage >= totalNumOfSitePages - dynamicBtnsMidPt) {\n    firstDynamicBtn = totalNumOfSitePages - numOfDynamicBtns;\n    lastDynamicBtn = totalNumOfSitePages - 1;\n    showFirstEllipsis = true;\n  } else {\n    firstDynamicBtn = activeSitePage - extendedPagesFromMidPt;\n    lastDynamicBtn = activeSitePage + extendedPagesFromMidPt;\n    showFirstEllipsis = true;\n    showSecondEllipsis = true;\n  }\n\n  let dynamicBtns = [];\n  for (let i = firstDynamicBtn; i <= lastDynamicBtn; i++) {\n    let isActive = false;\n    if (activeSitePage === i) {\n      isActive = true;\n    }\n    dynamicBtns.push(\n      <Styled.PageBtn\n        isActive={isActive}\n        key={i}\n        onClick={() => {\n          dispatch({ type: `HANDLE_CHANGE_SITE_PAGE_NUM`, payload: i });\n        }}\n      >\n        {i}\n      </Styled.PageBtn>\n    );\n  }\n\n  const firstPageBtn = (\n    <Styled.PageBtn\n      isActive={activeSitePage === 1}\n      onClick={() => {\n        dispatch({ type: `HANDLE_CHANGE_SITE_PAGE_NUM`, payload: 1 });\n      }}\n    >\n      1\n    </Styled.PageBtn>\n  );\n\n  const lastPageBtn = (\n    <Styled.PageBtn\n      isActive={activeSitePage === totalNumOfSitePages}\n      onClick={() => {\n        dispatch({\n          type: `HANDLE_CHANGE_SITE_PAGE_NUM`,\n          payload: totalNumOfSitePages,\n        });\n      }}\n    >\n      {totalNumOfSitePages}\n    </Styled.PageBtn>\n  );\n\n  const previousBtn = (\n    <Styled.PageBtn\n      disabled={activeSitePage === 1}\n      onClick={() => {\n        dispatch({\n          type: `HANDLE_CHANGE_SITE_PAGE_NUM`,\n          payload: activeSitePage - 1,\n        });\n      }}\n    >\n      &#11207;\n    </Styled.PageBtn>\n  );\n\n  const nextBtn = (\n    <Styled.PageBtn\n      disabled={activeSitePage === totalNumOfSitePages}\n      onClick={() => {\n        dispatch({\n          type: `HANDLE_CHANGE_SITE_PAGE_NUM`,\n          payload: activeSitePage + 1,\n        });\n      }}\n    >\n      &#11208;\n    </Styled.PageBtn>\n  );\n\n  return (\n    <div>\n      {previousBtn}\n      {firstPageBtn}\n      {showFirstEllipsis && ` ... `}\n      {dynamicBtns}\n      {showSecondEllipsis && ` ... `}\n      {totalNumOfSitePages !== 1 && lastPageBtn}\n      {nextBtn}\n    </div>\n  );\n};\n\nexport default PageControl;\n","import styled from \"styled-components\";\n\nexport const QueryPanelWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 70vw;\n  margin: 1% 0;\n  justify-content: space-around;\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 90vw;\n    justify-content: end;\n  }\n`;\n\nexport const QueryForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  & > div > label {\n    margin-left: 20px;\n  }\n\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    justify-content: space-between;\n    & > div > label {\n      display: inline-block;\n      width: 60px;\n      text-align: left;\n      margin-left: 0px;\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: none;\n`;\n\nexport const ClearQueryBtn = styled.button`\n  background: white;\n  color: ${({ theme }) => theme.accent.main};\n  border: ${({ theme }) => theme.accent.main} 1px solid;\n  border-radius: 20px;\n  &:hover {\n    color: white;\n    background-color: ${({ theme }) => theme.accent.main};\n  }\n  &:focus {\n    box-shadow: 0 0 0 3px ${({ theme }) => theme.success.lighten6};\n  }\n  padding: 5px 10px;\n  margin: 3px;\n`;\n","import React, { useContext, useState } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./QueryPanel.styles\";\n\nconst QueryPanel = () => {\n  const { state, dispatch } = useContext(Context);\n  const [speciesInput, setSpeciesInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newSpeciesQuery = speciesInput.trim();\n    const newNameQuery = nameInput.trim();\n\n    if (\n      newSpeciesQuery === state.speciesQuery &&\n      newNameQuery === state.nameQuery\n    ) {\n      return;\n    }\n\n    dispatch({\n      type: `SET_NAME_AND_SPECIES_QUERY`,\n      payload: { newSpeciesQuery, newNameQuery },\n    });\n  };\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"nameInput\":\n        setNameInput(e.target.value);\n        break;\n\n      case \"speciesInput\":\n        setSpeciesInput(e.target.value);\n        break;\n\n      case \"statusInput\":\n        dispatch({\n          type: `SET_STATUS_QUERY`,\n          payload: e.target.value,\n        });\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const clearAllQuery = () => {\n    dispatch({\n      type: `CLEAR_ALL_FILTER`,\n    });\n    setSpeciesInput(\"\");\n    setNameInput(\"\");\n  };\n\n  return (\n    <Styled.QueryPanelWrapper>\n      <Styled.QueryForm\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <div>\n          <label htmlFor=\"nameInput\">Name: </label>\n          <input\n            type=\"text\"\n            id=\"nameInput\"\n            name=\"nameInput\"\n            placeholder=\"Press enter to submit\"\n            value={nameInput}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"speciesInput\">Species: </label>\n          <input\n            type=\"text\"\n            id=\"speciesInput\"\n            name=\"speciesInput\"\n            placeholder=\"Press enter to submit\"\n            value={speciesInput}\n            onChange={(e) => handleChange(e)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"statusInput\">Status: </label>\n          <select\n            id=\"statusInput\"\n            name=\"statusInput\"\n            onChange={(e) => handleChange(e)}\n            value={state.statusQuery}\n          >\n            <option value=\"\">All</option>\n            <option value=\"alive\">Alive</option>\n            <option value=\"dead\">Dead</option>\n            <option value=\"unknown\">Unknown</option>\n          </select>\n        </div>\n\n        <Styled.SubmitBtn type=\"submit\"></Styled.SubmitBtn>\n      </Styled.QueryForm>\n      <Styled.ClearQueryBtn onClick={clearAllQuery}>CLEAR</Styled.ClearQueryBtn>\n    </Styled.QueryPanelWrapper>\n  );\n};\n\nexport default QueryPanel;\n","import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  background: ${({ theme }) => theme.background};\n  min-height: 100vh;\n`;\n","import { useReducer } from \"react\";\n\nconst initialState = {\n  characterData: [],\n  dataInfo: {},\n  episodeData: [],\n  isDataNotFound: false,\n  currentApiPage: 1,\n  showSecondPart: false,\n  activeCharPosition: null,\n  nameQuery: \"\",\n  speciesQuery: \"\",\n  statusQuery: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"RECIEVE_CHAR_DATA\":\n      return {\n        ...state,\n        characterData: action.payload.results,\n        dataInfo: action.payload.info,\n        episodeData: [],\n        isDataNotFound: false,\n      };\n\n    case `SET_DATA_NOT_FOUND`:\n      return {\n        ...state,\n        isDataNotFound: true,\n        characterData: [],\n        episodeData: [],\n        dataInfo: {},\n      };\n\n    case `HANDLE_CHANGE_SITE_PAGE_NUM`:\n      const targetSitePage = action.payload;\n      const targetApiPage = Math.ceil(targetSitePage / 2);\n\n      if (targetApiPage !== state.currentApiPage) {\n        if (targetSitePage % 2 === 0) {\n          return {\n            ...state,\n            currentApiPage: targetApiPage,\n            showSecondPart: true,\n            activeCharPosition: null,\n          };\n        } else {\n          //when targetSitePage is odd number\n          return {\n            ...state,\n            currentApiPage: targetApiPage,\n            showSecondPart: false,\n            activeCharPosition: null,\n          };\n        }\n      }\n      // when targetApiPage === state.currentApiPage\n      if (targetSitePage % 2 === 0) {\n        return {\n          ...state,\n          showSecondPart: true,\n          activeCharPosition: null,\n          episodeData: [],\n        };\n      } else {\n        return {\n          ...state,\n          showSecondPart: false,\n          activeCharPosition: null,\n          episodeData: [],\n        };\n      }\n\n    case `SET_ACTIVE_CHAR_POSITION`:\n      return {\n        ...state,\n        activeCharPosition: action.payload,\n        episodeData: [],\n      };\n\n    case `RECIEVE_EPISODE_DATA`:\n      return {\n        ...state,\n        episodeData: action.payload,\n      };\n\n    case `SET_NAME_AND_SPECIES_QUERY`:\n      return {\n        ...state,\n        nameQuery: action.payload.newNameQuery,\n        speciesQuery: action.payload.newSpeciesQuery,\n        currentApiPage: 1,\n        showSecondPart: false,\n        activeCharPosition: null,\n      };\n\n    case `SET_STATUS_QUERY`:\n      return {\n        ...state,\n        statusQuery: action.payload,\n        currentApiPage: 1,\n        showSecondPart: false,\n        activeCharPosition: null,\n      };\n\n    case `CLEAR_ALL_FILTER`:\n      return {\n        ...state,\n        speciesQuery: \"\",\n        statusQuery: \"\",\n        nameQuery: \"\",\n        activeCharPosition: null,\n        currentApiPage: 1,\n        showSecondPart: false,\n        episodeData: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalState = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalState;\n","export const getEpiNumReqStr = (episodeUrlArr) => {\n  let episodeNumArr = [];\n  episodeNumArr = episodeUrlArr.map((url, i) => {\n    let episodeNum = 1;\n    for (let i = url.length - 1; i >= 0; i--) {\n      if (url[i] === \"/\") {\n        episodeNum = url.slice(i + 1);\n        break;\n      }\n    }\n    return episodeNum;\n  });\n\n  return episodeNumArr.join();\n};\n","export const theme = {\n  primary: {\n    main: \"#ab70f0\", // purple,\n    lighten1: \"#e5d4fa\",\n    lighten2: \"#eee2fc\",\n  },\n  secondary: {\n    main: \"#a6d9c6\", // green\n  },\n  accent: {\n    main: \"#fe615f\", // red\n    darken1: \"#e63946\",\n    dark: \"#e42231\",\n  },\n  success: {\n    main: \"#564f42\", // brown\n    lighten4: \"#bba998\",\n    lighten6: \"#eee8d5\",\n  },\n  background: \"#f8f8f8\",\n  shadowColor: \"rgba(0, 0, 0, 0.5)\",\n\n  fontSizes: {\n    sm: \"10px\",\n    md: \"15px\",\n    lg: \"25px\",\n  },\n\n  breakpoints: {\n    sm: \"(max-width: 600px)\",\n    md: \"(max-width: 800px)\",\n    lg: \"(max-width: 960px)\",\n  },\n};\n","import { createGlobalStyle } from \"styled-components/macro\";\nimport { theme } from \"./theme\";\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding:0;\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n        \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n        sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        box-sizing: border-box; \n    }\n\n    button {\n        border: none;\n        outline:none;\n        background:none;\n        cursor:pointer;\n    }\n\n    input{\n        border-radius: 5px;\n        box-shadow: 0 2px 5px ${theme.primary.lighten1}, 0 -2px 5px ${theme.primary.lighten2};\n        border: 1px solid ${theme.primary.lighten1};\n        margin: 3px 5px;\n        font-size: 14px;\n        padding: 4px;\n        outline: none;\n        :hover, :focus{\n            border: 1px solid  ${theme.primary.main};\n        }\n    }\n\n    select{\n        border-radius:5px;\n        box-shadow: 0 2px 5px ${theme.primary.lighten1}, 0 -2px 5px ${theme.primary.lighten2};\n        border: 1px solid ${theme.primary.lighten1};\n        background: white;\n        font-size: 14px;\n        padding: 2px 4px;\n        margin: 3px 5px;\n        outline: none;\n        :hover, :focus{\n            border: 1px solid  ${theme.primary.main};\n        }}\n\n`;\n","import React, { useEffect } from \"react\";\nimport Context from \"./context\";\nimport useGlobalState from \"./useGlobalState\";\nimport { getEpiNumReqStr } from \"../service/getEpiNumReqStr\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../styleStore/theme\";\nimport GlobalStyles from \"../styleStore/globalStyles\";\nimport axios from \"axios\";\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useGlobalState();\n  const fetchData = async (collection = \"character\") => {\n    let response;\n    try {\n      if (collection === \"episode\") {\n        const charPosition = state.activeCharPosition;\n        if (!charPosition && charPosition !== 0) {\n          return;\n        }\n        const activeCharEpiInfo = state.characterData[charPosition].episode;\n        const episodeReq = getEpiNumReqStr(activeCharEpiInfo);\n        response = await axios.get(\n          `https://rickandmortyapi.com/api/${collection}/${episodeReq}`\n        );\n      } else {\n        // querying character\n        const query = {\n          page: state.currentApiPage,\n          name: state.nameQuery,\n          species: state.speciesQuery,\n          status: state.statusQuery,\n        };\n        response = await axios.get(\n          `https://rickandmortyapi.com/api/${collection}/`,\n          {\n            params: query,\n          }\n        );\n      }\n\n      const { data } = response;\n\n      switch (collection) {\n        case \"character\":\n          dispatch({\n            type: `RECIEVE_CHAR_DATA`,\n            payload: { results: data.results, info: data.info },\n          });\n          break;\n        case \"episode\":\n          let dataInArr = data;\n          if (!data.length) {\n            dataInArr = [{ ...data }];\n          }\n          dispatch({\n            type: `RECIEVE_EPISODE_DATA`,\n            payload: dataInArr,\n          });\n          break;\n        default:\n          return;\n      }\n    } catch (err) {\n      if (err.response && err.response.status === 404) {\n        return dispatch({ type: `SET_DATA_NOT_FOUND`, payload: err });\n      } else {\n        console.log(\"error from fetching data: \", err);\n      }\n    }\n  };\n\n  useEffect(\n    () => {\n      fetchData();\n    },\n    /* eslint-disable-line react-hooks/exhaustive-deps*/ [\n      state.currentApiPage,\n      state.nameQuery,\n      state.speciesQuery,\n      state.statusQuery,\n    ]\n  );\n\n  useEffect(() => {\n    fetchData(\"episode\");\n  }, [state.activeCharPosition]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {children}\n      </ThemeProvider>\n    </Context.Provider>\n  );\n};\n\nexport default GlobalStateProvider;\n","import React from \"react\";\nimport BasicInfoCards from \"./components/BasicInfoCards/BasicInfoCards\";\nimport DetailCard from \"./components/DetailCard/DetailCard\";\nimport PageControl from \"./components/PageControl/PageControl\";\nimport QueryPanel from \"./components/QueryPanel/QueryPanel\";\nimport * as Styled from \"./App.styles\";\nimport GlobalStateProvider from \"./store/GlobalStateProvider\";\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <Styled.AppWrapper>\n        <QueryPanel />\n        <BasicInfoCards />\n        <DetailCard />\n        <PageControl />\n      </Styled.AppWrapper>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}