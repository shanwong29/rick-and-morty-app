{"version":3,"sources":["store/context.js","components/BasicInfoCards/BasicInfoCards.styles.js","components/BasicInfoCards/BasicInfoCards.js","service/dateWithinRangeChecker.js","components/DetailCard/DetailCard.styles.js","components/DetailCard/DetailCard.js","service/timeStampFormatter.js","components/PageControl/PageControl.styles.js","components/PageControl/PageControl.js","components/QueryPanel/QueryPanel.styles.js","components/QueryPanel/QueryPanel.js","App.styles.js","store/useGlobalState.js","service/getData.js","styleStore/theme.js","styleStore/globalStyles.js","store/GlobalStateProvider.js","service/getEpiNumReqStr.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","InfoCardsWrapper","styled","div","theme","deepGreen","breakpoints","sm","BasicInfoCard","button","isActive","lightGreen","TextWrapper","notFoundMsg","h1","React","memo","useContext","state","dispatch","isDataNotFound","modifiedData","showSecondPart","characterData","slice","numOfFilteredOutChar","cardDisplay","map","el","i","targetDate","rangeStartDate","rangeEndDate","name","status","species","image","created","id","charPosition","startDateQuery","endDateQuery","Date","setHours","onClick","activeCharPosition","type","payload","key","src","alt","length","ClosePopUpBtn","pastelOrange","darkOrange","DetailCard","shadowColor","ImgWrapper","TextInfoWrapper","milkTea","Table","table","TH","th","SubTitle","p","EpNum","span","morandiPink","activeCharInfo","episodeInfo","episodeData","episode","gender","origin","location","timeStamp","formattedDate","date","getDate","month","0","1","2","3","4","5","6","7","8","9","10","11","getMonth","year","getFullYear","timeStampFormatter","style","color","colSpan","PageBtn","disabled","PageControl","totalNumOfSitePages","Math","ceil","dataInfo","count","activeSitePage","currentApiPage","numOfDynamicBtns","window","innerWidth","firstDynamicBtn","lastDynamicBtn","dynamicBtnsMidPt","extendedPagesFromMidPt","floor","showFirstEllipsis","showSecondEllipsis","dynamicBtns","push","firstPageBtn","lastPageBtn","previousBtn","nextBtn","QueryForm","form","SubmitBtn","ClearQueryBtn","beige","useState","speciesInput","setSpeciesInput","nameInput","setNameInput","handleChange","e","target","value","onSubmit","preventDefault","newSpeciesQuery","trim","newNameQuery","speciesQuery","nameQuery","handleSubmit","htmlFor","placeholder","onChange","statusQuery","AppWrapper","initialState","reducer","action","results","info","targetSitePage","targetApiPage","useGlobalState","useReducer","url","a","axios","get","response","data","blue","paleBlue","fontSizes","md","lg","createGlobalStyle","GlobalStateProvider","children","fetchData","query","collection","getData","dataInArr","console","log","useEffect","activeCharEpiInfo","episodeReq","episodeNum","join","Provider","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9eb793a9.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst Context = createContext({});\n\nexport default Context;\n","import styled from \"styled-components\";\n\nexport const InfoCardsWrapper = styled.div`\n  width: 80vw;\n  min-height: 40vw;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-bottom: 5px;\n\n  & > button > div {\n    border-left: 1px solid ${({ theme }) => theme.deepGreen};\n  }\n  & > button:first-child > div,\n  & > button:nth-child(6) > div {\n    border-left: 0px;\n  }\n\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 90vw;\n    grid-template-columns: repeat(2, 1fr);\n    & > button:first-child > div,\n    & > button:nth-child(3) > div,\n    & > button:nth-child(5) > div,\n    & > button:nth-child(7) > div,\n    & > button:nth-child(9) > div {\n      border-left: 0px;\n    }\n\n    & > button:nth-child(6) > div {\n      border-left: 1px solid ${({ theme }) => theme.deepGreen};\n    }\n  }\n`;\n\nexport const BasicInfoCard = styled.button`\n  color: ${({ theme, isActive }) =>\n    isActive ? theme.lightGreen : theme.deepGreen};\n  background: ${({ theme, isActive }) =>\n    isActive ? theme.deepGreen : theme.lightGreen};\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  &:hover,\n  &:focus {\n    background: ${({ theme }) => theme.deepGreen};\n    color: ${({ theme }) => theme.lightGreen};\n  }\n  grid-row: span 1;\n\n  & > img {\n    width: 100%;\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 5px 0;\n  width: 100%;\n  height: 100%;\n  & > h2 {\n    @media ${({ theme }) => theme.breakpoints.sm} {\n      font-size: 1rem;\n    }\n  }\n  & > p {\n    font-size: 1rem;\n    @media ${({ theme }) => theme.breakpoints.sm} {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport const notFoundMsg = styled.h1`\n  grid-column: span 5;\n`;\n","import React, { useContext, Fragment } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./BasicInfoCards.styles\";\nimport { dateWithinRangeChecker } from \"../../service/dateWithinRangeChecker\";\n\nconst BasicInfoCards = () => {\n  const { state, dispatch } = useContext(Context);\n\n  //handle Not-found\n  if (state.isDataNotFound) {\n    return <h1>No characters fits this filter request. :(</h1>;\n  }\n\n  const numOfCardOnEachPage = 10;\n\n  let modifiedData;\n  if (state.showSecondPart) {\n    modifiedData = state.characterData.slice(numOfCardOnEachPage);\n  } else {\n    modifiedData = state.characterData.slice(0, numOfCardOnEachPage);\n  }\n\n  let numOfFilteredOutChar = 0;\n\n  const cardDisplay = modifiedData.map((el, i) => {\n    const { name, status, species, image, created, id } = el;\n    //for SET_ACTIVE_CHAR_POSITION use\n    let charPosition = i;\n    if (state.showSecondPart) {\n      charPosition = i + numOfCardOnEachPage;\n    }\n\n    //Filter by created date on page\n    let isCreatedDateWithinQueryPeriod = dateWithinRangeChecker(\n      created,\n      state.startDateQuery,\n      state.endDateQuery\n    );\n\n    if (!isCreatedDateWithinQueryPeriod) {\n      numOfFilteredOutChar++;\n      return <Fragment key={i}></Fragment>;\n    }\n\n    return (\n      <Styled.BasicInfoCard\n        onClick={() => {\n          state.activeCharPosition !== charPosition &&\n            dispatch({\n              type: `SET_ACTIVE_CHAR_POSITION`,\n              payload: charPosition,\n            });\n        }}\n        key={i}\n        isActive={\n          i ===\n          (typeof state.activeCharPosition === \"number\" &&\n            state.activeCharPosition % 10)\n        }\n      >\n        <img src={image} alt={name} />\n        <Styled.TextWrapper>\n          <h2>{name}</h2>\n          <p>\n            No: {id} | {species} | {status}\n          </p>\n        </Styled.TextWrapper>\n      </Styled.BasicInfoCard>\n    );\n  });\n\n  if (\n    numOfFilteredOutChar === modifiedData.length &&\n    state.characterData.length\n  ) {\n    return (\n      <Styled.InfoCardsWrapper>\n        <Styled.notFoundMsg>\n          No character on this page fit the \"created date filter.\"\n        </Styled.notFoundMsg>\n        ;\n      </Styled.InfoCardsWrapper>\n    );\n  }\n  return <Styled.InfoCardsWrapper>{cardDisplay}</Styled.InfoCardsWrapper>;\n};\n\nexport default React.memo(BasicInfoCards);\n","const dateWithinRangeChecker = (targetDate, rangeStartDate, rangeEndDate) => {\n  targetDate = new Date(targetDate);\n\n  if (rangeStartDate) {\n    rangeStartDate = new Date(rangeStartDate);\n    rangeStartDate.setHours(0, 0, 0);\n    if (targetDate < rangeStartDate) {\n      return false;\n    }\n  }\n\n  if (rangeEndDate) {\n    rangeEndDate = new Date(rangeEndDate);\n    rangeEndDate.setHours(23, 59, 0);\n    if (targetDate > rangeEndDate) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport { dateWithinRangeChecker };\n","import styled from \"styled-components\";\n\nexport const ClosePopUpBtn = styled.button`\n  color: white;\n  background-color: ${({ theme }) => theme.pastelOrange};\n  border-radius: 50%;\n  &:hover {\n    color: white;\n    background-color: ${({ theme }) => theme.darkOrange};\n  }\n  &:focus {\n    box-shadow: 0 0 0 3px ${({ theme }) => theme.darkOrange};\n  }\n  font-size: 1.5rem;\n  width: 3rem;\n  height: 3rem;\n  position: absolute;\n  left: 80vw;\n  top: 15%;\n  transform: translate(-50%, -50%);\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    left: 90vw;\n    top: 10vh;\n    position: fixed;\n  }\n`;\n\nexport const DetailCard = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 60vw;\n  height: 70%;\n  background: white;\n  text-align: left;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  overflow: auto;\n  box-shadow: 20px 20px 30px ${({ theme }) => theme.shadowColor},\n    -20px -20px 30px ${({ theme }) => theme.shadowColor};\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 80vw;\n    height: 80vh;\n    position: fixed;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  width: 40%;\n  & > img {\n    width: 100%;\n  }\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 100%;\n  }\n`;\n\nexport const TextInfoWrapper = styled.div`\n  margin: 10px 20px;\n\n  & > h1 {\n    color: ${({ theme }) => theme.milkTea};\n  }\n\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    margin: 5px;\n  }\n`;\n\nexport const Table = styled.table`\n  margin: 15px auto;\n  width: 100%;\n`;\n\nexport const TH = styled.th`\n  vertical-align: text-top;\n  color: grey;\n  width: 90px;\n`;\n\nexport const SubTitle = styled.p`\n  color: grey;\n  font-weight: 700;\n`;\n\nexport const EpNum = styled.span`\n  display: inline-block;\n  width: 70px;\n  background: ${({ theme }) => theme.morandiPink};\n  color: white;\n  border-radius: 5px;\n  font-size: 14px;\n  margin-top: 2px;\n  padding: 2px 4px;\n  text-align: center;\n`;\n","import React, { Fragment, useContext } from \"react\";\nimport { timeStampFormatter } from \"../../service/timeStampFormatter\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./DetailCard.styles\";\n\nconst DetailCard = () => {\n  const { state, dispatch } = useContext(Context);\n\n  const isPopUpOn = state.activeCharPosition || state.activeCharPosition === 0;\n\n  if (!isPopUpOn) {\n    return <></>;\n  }\n\n  const activeCharInfo = state.characterData[state.activeCharPosition];\n\n  const episodeInfo = state.episodeData.map((el, i) => {\n    return (\n      <Fragment key={i}>\n        <tr>\n          <Styled.TH>\n            <Styled.EpNum>{el.episode}</Styled.EpNum>\n          </Styled.TH>\n          <td>{el.name}</td>\n        </tr>\n      </Fragment>\n    );\n  });\n\n  const {\n    name,\n    status,\n    species,\n    image,\n    created,\n    id,\n    gender,\n    origin,\n    location,\n  } = activeCharInfo;\n\n  return (\n    <>\n      <Styled.DetailCard>\n        <Styled.ImgWrapper>\n          <img src={image} alt={name} />\n        </Styled.ImgWrapper>\n\n        <Styled.TextInfoWrapper>\n          <h1>{name}</h1>\n          <Styled.SubTitle>\n            Id: {id} &#8226; created on {timeStampFormatter(created)}\n          </Styled.SubTitle>\n\n          <Styled.Table>\n            <tbody>\n              <tr>\n                <Styled.TH>Species</Styled.TH>\n                <td>{species}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Status</Styled.TH>\n                <td>{status}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Gender</Styled.TH>\n                <td>{gender}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Origin</Styled.TH>\n                <td>{origin.name}</td>\n              </tr>\n              <tr>\n                <Styled.TH>Location</Styled.TH>\n                <td>{location.name}</td>\n              </tr>\n            </tbody>\n          </Styled.Table>\n          <Styled.Table>\n            <thead>\n              <tr>\n                <th style={{ color: \"grey\" }} colSpan=\"3\">\n                  Appeared Episode\n                </th>\n              </tr>\n            </thead>\n            <tbody>{episodeInfo}</tbody>\n          </Styled.Table>\n        </Styled.TextInfoWrapper>\n      </Styled.DetailCard>\n\n      <Styled.ClosePopUpBtn\n        onClick={() => {\n          dispatch({\n            type: `SET_ACTIVE_CHAR_POSITION`,\n            payload: null,\n          });\n        }}\n      >\n        &#10005;\n      </Styled.ClosePopUpBtn>\n    </>\n  );\n};\n\nexport default DetailCard;\n","export const timeStampFormatter = (timeStamp) => {\n  let monthDict = {\n    0: \"Jan\",\n    1: \"Feb\",\n    2: \"Mar\",\n    3: \"Apr\",\n    4: \"May\",\n    5: \"Jun\",\n    6: \"Jul\",\n    7: \"Aug\",\n    8: \"Sep\",\n    9: \"Oct\",\n    10: \"Nov\",\n    11: \"Dec\",\n  };\n\n  let formattedDate = new Date(timeStamp);\n  let date = formattedDate.getDate();\n  let monthNum = formattedDate.getMonth();\n  let month = monthDict[monthNum];\n  let year = formattedDate.getFullYear();\n\n  return `${date} ${month} ${year}`;\n};\n","import styled from \"styled-components\";\n\nexport const PageBtn = styled.button`\n  color: ${({ isActive, theme }) => (isActive ? \"red\" : theme.milkTea)};\n  font-size: 1rem;\n  padding: 8px;\n  visibility: ${({ disabled }) => disabled && \"hidden\"};\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    font-size: 1.2rem;\n    padding: 10px;\n  }\n`;\n","import React, { useContext } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./PageControl.styles\";\n\nconst PageControl = () => {\n  const { state, dispatch } = useContext(Context);\n\n  if (!state.characterData.length) {\n    return <></>;\n  }\n\n  const totalNumOfSitePages = Math.ceil(state.dataInfo.count / 10);\n\n  let activeSitePage = state.currentApiPage * 2;\n\n  if (!state.showSecondPart) {\n    activeSitePage = state.currentApiPage * 2 - 1;\n  }\n\n  let numOfDynamicBtns = 9;\n  const isMobile = window.innerWidth < 540;\n  if (isMobile) {\n    numOfDynamicBtns = 3;\n  }\n\n  const dynamicBtnsMidPt = Math.ceil(numOfDynamicBtns / 2); // 5\n  const extendedPagesFromMidPt = Math.floor(numOfDynamicBtns / 2); // 4\n\n  let showFirstEllipsis = false;\n  let showSecondEllipsis = false;\n  let firstDynamicBtn;\n  let lastDynamicBtn;\n\n  if (totalNumOfSitePages <= numOfDynamicBtns + 2) {\n    // numOfDynamicBtns + 2  ==> as we need to add first & last page btn\n    firstDynamicBtn = 2;\n    lastDynamicBtn = totalNumOfSitePages - 1;\n  } else if (activeSitePage <= 1 + dynamicBtnsMidPt) {\n    firstDynamicBtn = 2;\n    lastDynamicBtn = 1 + numOfDynamicBtns;\n    showSecondEllipsis = true;\n  } else if (activeSitePage >= totalNumOfSitePages - dynamicBtnsMidPt) {\n    firstDynamicBtn = totalNumOfSitePages - numOfDynamicBtns;\n    lastDynamicBtn = totalNumOfSitePages - 1;\n    showFirstEllipsis = true;\n  } else {\n    firstDynamicBtn = activeSitePage - extendedPagesFromMidPt;\n    lastDynamicBtn = activeSitePage + extendedPagesFromMidPt;\n    showFirstEllipsis = true;\n    showSecondEllipsis = true;\n  }\n\n  let dynamicBtns = [];\n  for (let i = firstDynamicBtn; i <= lastDynamicBtn; i++) {\n    let isActive = false;\n    if (activeSitePage === i) {\n      isActive = true;\n    }\n    dynamicBtns.push(\n      <Styled.PageBtn\n        isActive={isActive}\n        key={i}\n        onClick={() => {\n          dispatch({ type: `HANDLE_CHANGE_SITE_PAGE_NUM`, payload: i });\n        }}\n      >\n        {i}\n      </Styled.PageBtn>\n    );\n  }\n\n  const firstPageBtn = (\n    <Styled.PageBtn\n      isActive={activeSitePage === 1}\n      onClick={() => {\n        dispatch({ type: `HANDLE_CHANGE_SITE_PAGE_NUM`, payload: 1 });\n      }}\n    >\n      1\n    </Styled.PageBtn>\n  );\n\n  const lastPageBtn = (\n    <Styled.PageBtn\n      isActive={activeSitePage === totalNumOfSitePages}\n      onClick={() => {\n        dispatch({\n          type: `HANDLE_CHANGE_SITE_PAGE_NUM`,\n          payload: totalNumOfSitePages,\n        });\n      }}\n    >\n      {totalNumOfSitePages}\n    </Styled.PageBtn>\n  );\n\n  const previousBtn = (\n    <Styled.PageBtn\n      disabled={activeSitePage === 1}\n      onClick={() => {\n        dispatch({\n          type: `HANDLE_CHANGE_SITE_PAGE_NUM`,\n          payload: activeSitePage - 1,\n        });\n      }}\n    >\n      &#11207;\n    </Styled.PageBtn>\n  );\n\n  const nextBtn = (\n    <Styled.PageBtn\n      disabled={activeSitePage === totalNumOfSitePages}\n      onClick={() => {\n        dispatch({\n          type: `HANDLE_CHANGE_SITE_PAGE_NUM`,\n          payload: activeSitePage + 1,\n        });\n      }}\n    >\n      &#11208;\n    </Styled.PageBtn>\n  );\n\n  return (\n    <div>\n      {previousBtn}\n      {firstPageBtn}\n      {showFirstEllipsis && ` ... `}\n      {dynamicBtns}\n      {showSecondEllipsis && ` ... `}\n      {totalNumOfSitePages !== 1 && lastPageBtn}\n      {nextBtn}\n    </div>\n  );\n};\n\nexport default PageControl;\n","import styled from \"styled-components\";\n\nexport const QueryForm = styled.form`\n  width: 70vw;\n  margin: 1% 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n\n  @media ${({ theme }) => theme.breakpoints.sm} {\n    width: 90vw;\n    justify-content: space-between;\n    & > div > label {\n      display: inline-block;\n      width: 60px;\n      text-align: left;\n    }\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  display: none;\n`;\n\nexport const ClearQueryBtn = styled.button`\n  background: white;\n  color: ${({ theme }) => theme.pastelOrange};\n  border: ${({ theme }) => theme.pastelOrange} 1px solid;\n  border-radius: 20px;\n  &:hover {\n    color: white;\n    background-color: ${({ theme }) => theme.pastelOrange};\n  }\n  &:focus {\n    box-shadow: 0 0 0 3px ${({ theme }) => theme.beige};\n  }\n  padding: 5px 10px;\n  margin: 3px;\n`;\n","import React, { useContext, useState } from \"react\";\nimport Context from \"../../store/context\";\nimport * as Styled from \"./QueryPanel.styles\";\n\nconst QueryPanel = () => {\n  const { state, dispatch } = useContext(Context);\n  const [speciesInput, setSpeciesInput] = useState(\"\");\n  const [nameInput, setNameInput] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newSpeciesQuery = e.target.speciesInput.value.trim();\n    const newNameQuery = e.target.nameInput.value.trim();\n\n    if (\n      newSpeciesQuery === state.speciesQuery &&\n      newNameQuery === state.nameQuery\n    ) {\n      return;\n    }\n\n    dispatch({\n      type: `SET_NAME_AND_SPECIES_QUERY`,\n      payload: { newSpeciesQuery, newNameQuery },\n    });\n  };\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"nameInput\":\n        setNameInput(e.target.value);\n        break;\n\n      case \"speciesInput\":\n        setSpeciesInput(e.target.value);\n        break;\n\n      case \"statusInput\":\n        dispatch({\n          type: `SET_STATUS_QUERY`,\n          payload: e.target.value,\n        });\n        break;\n\n      // case \"startDateInput\":\n      //   dispatch({\n      //     type: `SET_START_DATE_QUERY`,\n      //     payload: e.target.value,\n      //   });\n      //   break;\n\n      // case \"endDateInput\":\n      //   dispatch({\n      //     type: `SET_END_DATE_QUERY`,\n      //     payload: e.target.value,\n      //   });\n      //   break;\n\n      default:\n        return;\n    }\n  };\n\n  const clearAllQuery = () => {\n    dispatch({\n      type: `CLEAR_ALL_FILTER`,\n    });\n    setSpeciesInput(\"\");\n    setNameInput(\"\");\n  };\n\n  return (\n    <Styled.QueryForm\n      onSubmit={(e) => {\n        handleSubmit(e);\n      }}\n    >\n      <div>\n        <label htmlFor=\"nameInput\">Name: </label>\n        <input\n          type=\"text\"\n          id=\"nameInput\"\n          name=\"nameInput\"\n          placeholder=\"Press enter to submit\"\n          value={nameInput}\n          onChange={(e) => handleChange(e)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"speciesInput\">Species: </label>\n        <input\n          type=\"text\"\n          id=\"speciesInput\"\n          name=\"speciesInput\"\n          placeholder=\"Press enter to submit\"\n          value={speciesInput}\n          onChange={(e) => handleChange(e)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"statusInput\">Status: </label>\n        <select\n          id=\"statusInput\"\n          name=\"statusInput\"\n          onChange={(e) => handleChange(e)}\n          value={state.statusQuery}\n        >\n          <option value=\"\">All</option>\n          <option value=\"alive\">Alive</option>\n          <option value=\"dead\">Dead</option>\n          <option value=\"unknown\">Unknown</option>\n        </select>\n      </div>\n\n      <Styled.SubmitBtn type=\"submit\"></Styled.SubmitBtn>\n\n      <Styled.ClearQueryBtn onClick={clearAllQuery}>CLEAR</Styled.ClearQueryBtn>\n    </Styled.QueryForm>\n  );\n};\n\nexport default React.memo(QueryPanel);\n\n/* <label htmlFor=\"startDateInput\">\n        Filter characters by created date:{\" \"}\n      </label>\n      from{\" \"}\n      <input\n        type=\"date\"\n        name=\"startDateInput\"\n        id=\"startDateInput\"\n        value={state.startDateQuery}\n        onChange={(e) => handleChange(e)}\n      />{\" \"}\n      to\n      <input\n        type=\"date\"\n        name=\"endDateInput\"\n        id=\"endDateInput\"\n        value={state.endDateQuery}\n        onChange={(e) => handleChange(e)}\n      /> */\n","import styled from \"styled-components\";\n\nexport const AppWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n","import { useReducer } from \"react\";\n\nconst initialState = {\n  characterData: [],\n  dataInfo: {},\n  episodeData: [],\n  isDataNotFound: false,\n  currentApiPage: 1,\n  showSecondPart: false,\n  activeCharPosition: null,\n  nameQuery: \"\",\n  speciesQuery: \"\",\n  statusQuery: \"\",\n  startDateQuery: \"\",\n  endDateQuery: \"\",\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"RECIEVE_CHAR_DATA\":\n      return {\n        ...state,\n        characterData: action.payload.results,\n        dataInfo: action.payload.info,\n        episodeData: [],\n        isDataNotFound: false,\n      };\n\n    case `SET_DATA_NOT_FOUND`:\n      return {\n        ...state,\n        isDataNotFound: true,\n        characterData: [],\n        episodeData: [],\n        dataInfo: {},\n      };\n\n    case `HANDLE_CHANGE_SITE_PAGE_NUM`:\n      const targetSitePage = action.payload;\n      const targetApiPage = Math.ceil(targetSitePage / 2);\n\n      if (targetApiPage !== state.currentApiPage) {\n        if (targetSitePage % 2 === 0) {\n          return {\n            ...state,\n            currentApiPage: targetApiPage,\n            showSecondPart: true,\n            activeCharPosition: null,\n          };\n        } else {\n          //when targetSitePage is odd number\n          return {\n            ...state,\n            currentApiPage: targetApiPage,\n            showSecondPart: false,\n            activeCharPosition: null,\n          };\n        }\n      }\n      // when targetApiPage === state.currentApiPage\n      if (targetSitePage % 2 === 0) {\n        return {\n          ...state,\n          showSecondPart: true,\n          activeCharPosition: null,\n          episodeData: [],\n        };\n      } else {\n        return {\n          ...state,\n          showSecondPart: false,\n          activeCharPosition: null,\n          episodeData: [],\n        };\n      }\n\n    case `SET_ACTIVE_CHAR_POSITION`:\n      return {\n        ...state,\n        activeCharPosition: action.payload,\n        episodeData: [],\n      };\n\n    case `RECIEVE_EPISODE_DATA`:\n      return {\n        ...state,\n        episodeData: action.payload,\n      };\n\n    case `SET_NAME_AND_SPECIES_QUERY`:\n      return {\n        ...state,\n        nameQuery: action.payload.newNameQuery,\n        speciesQuery: action.payload.newSpeciesQuery,\n        currentApiPage: 1,\n        showSecondPart: false,\n        activeCharPosition: null,\n      };\n\n    case `SET_STATUS_QUERY`:\n      return {\n        ...state,\n        statusQuery: action.payload,\n        currentApiPage: 1,\n        showSecondPart: false,\n        activeCharPosition: null,\n      };\n\n    case `SET_START_DATE_QUERY`:\n      return {\n        ...state,\n        startDateQuery: action.payload,\n        activeCharPosition: null,\n      };\n    case `SET_END_DATE_QUERY`:\n      return {\n        ...state,\n        endDateQuery: action.payload,\n        activeCharPosition: null,\n      };\n\n    case `CLEAR_ALL_FILTER`:\n      return {\n        ...state,\n        speciesQuery: \"\",\n        statusQuery: \"\",\n        startDateQuery: \"\",\n        endDateQuery: \"\",\n        activeCharPosition: null,\n        currentApiPage: 1,\n        showSecondPart: false,\n        episodeData: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst useGlobalState = () => {\n  return useReducer(reducer, initialState);\n};\n\nexport default useGlobalState;\n","import axios from \"axios\";\n\nexport default async (url) => {\n  const response = await axios.get(url);\n  return response.data;\n};\n","export const theme = {\n  pastelOrange: \"#EE6C4D\",\n  darkOrange: \"#B0361E\",\n  lightGreen: \"#C0CFC3\",\n  deepGreen: \"#4B554F\",\n  blue: \"#a8dadc\",\n  paleBlue: \"#f1faee\",\n  beige: \"#eee8d5\",\n  milkTea: \"#8e7054\",\n  morandiPink: \"#b36a5e\",\n  shadowColor: \"rgba(0, 0, 0, 0.5)\",\n  // pink: \"#b75d69\",\n\n  fontSizes: {\n    sm: \"10px\",\n    md: \"15px\",\n    lg: \"25px\",\n  },\n\n  breakpoints: {\n    sm: \"(max-width: 600px)\",\n    md: \"(max-width: 800px)\",\n    lg: \"(max-width: 960px)\",\n  },\n};\n","import { createGlobalStyle } from \"styled-components/macro\";\nimport { theme } from \"./theme\";\n\nexport default createGlobalStyle`\n    * {\n        margin: 0;\n        padding:0;\n        box-sizing: border-box;\n    }\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n        \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n        sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        box-sizing: border-box; \n    }\n\n    button {\n        border: none;\n        outline:none;\n        background:none;\n        cursor:pointer;\n    }\n\n    input{\n        border-radius: 5px;\n        box-shadow: 0 2px 5px ${theme.blue}, 0 -2px 5px ${theme.paleBlue};\n        border: 1px solid ${theme.blue};\n        margin: 3px 5px;\n        font-size: 14px;\n        padding: 4px;\n    }\n\n    select{\n        border-radius:5px;\n        box-shadow: 0 2px 5px ${theme.blue}, 0 -2px 5px ${theme.paleBlue};\n        border: 1px solid ${theme.blue};\n        background: white;\n        font-size: 14px;\n        padding: 2px 4px;\n        margin: 3px 5px;\n    }\n\n`;\n","import React, { useEffect } from \"react\";\nimport Context from \"./context\";\nimport useGlobalState from \"./useGlobalState\";\nimport getData from \"../service/getData\";\nimport { getEpiNumReqStr } from \"../service/getEpiNumReqStr\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../styleStore/theme\";\nimport GlobalStyles from \"../styleStore/globalStyles\";\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = useGlobalState();\n\n  const fetchData = async (query = \"\", collection = \"character\") => {\n    try {\n      const response = await getData(\n        `https://rickandmortyapi.com/api/${collection}/${query}`\n      );\n\n      switch (collection) {\n        case \"character\":\n          dispatch({\n            type: `RECIEVE_CHAR_DATA`,\n            payload: { results: response.results, info: response.info },\n          });\n          break;\n        case \"episode\":\n          let dataInArr = response;\n          if (!response.length) {\n            dataInArr = [{ ...response }];\n          }\n          dispatch({\n            type: `RECIEVE_EPISODE_DATA`,\n            payload: dataInArr,\n          });\n          break;\n        default:\n          return;\n      }\n    } catch (err) {\n      if (err.response.status === 404) {\n        return dispatch({ type: `SET_DATA_NOT_FOUND`, payload: err });\n      }\n      console.log(\"error from fetching data: \", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    fetchData(\n      `?page=${state.currentApiPage}&name=${state.nameQuery}&species=${state.speciesQuery}&status=${state.statusQuery}`\n    );\n  }, [\n    state.currentApiPage,\n    state.nameQuery,\n    state.speciesQuery,\n    state.statusQuery,\n  ]);\n\n  useEffect(() => {\n    let charPosition = state.activeCharPosition;\n\n    if (!charPosition && charPosition !== 0) {\n      return;\n    }\n    const activeCharEpiInfo = state.characterData[charPosition].episode;\n    const episodeReq = getEpiNumReqStr(activeCharEpiInfo);\n\n    fetchData(`${episodeReq}`, `episode`);\n  }, [state.activeCharPosition]);\n\n  return (\n    <Context.Provider value={{ state, dispatch }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles />\n        {children}\n      </ThemeProvider>\n    </Context.Provider>\n  );\n};\n\nexport default GlobalStateProvider;\n","export const getEpiNumReqStr = (episodeUrlArr) => {\n  let episodeNumArr = [];\n  episodeNumArr = episodeUrlArr.map((url, i) => {\n    let episodeNum = 1;\n    for (let i = url.length - 1; i >= 0; i--) {\n      if (url[i] === \"/\") {\n        episodeNum = url.slice(i + 1);\n        break;\n      }\n    }\n    return episodeNum;\n  });\n\n  return episodeNumArr.join();\n};\n","import React from \"react\";\nimport BasicInfoCards from \"./components/BasicInfoCards/BasicInfoCards\";\nimport DetailCard from \"./components/DetailCard/DetailCard\";\nimport PageControl from \"./components/PageControl/PageControl\";\nimport QueryPanel from \"./components/QueryPanel/QueryPanel\";\nimport * as Styled from \"./App.styles\";\nimport GlobalStateProvider from \"./store/GlobalStateProvider\";\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <Styled.AppWrapper>\n        <QueryPanel />\n        <BasicInfoCards />\n        <DetailCard />\n        <PageControl />\n      </Styled.AppWrapper>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}